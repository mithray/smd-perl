# Markdown

This is a markdown implementation intended to be flexible and hackable to support multiple versions of markdown.

## Contents

### Implemented

- Headings
- Phrasing Elements
- HTML document wrapping and minimal styling
- Critic Markup

### Not Implemented

- Lists
- Line Breaks
- Videos
- Code & Syntax Highlighting
- Links
- Most things Really
- Inline HTML
- Blockquotes
- Images
- Tables
- Horizontal rule
- TEX


## Phrasing Elements

To use **strong** tags put double ** or __ on each side of a word or phrase.
To use **em** tags put single * or _ on each side of a word or phrase.

## Critic Markup

Comment with {>curly parenthesis and angle brackets<}

Use ins with {+plus+} del with {-minus-}, mark with {=mark=} 

        
        
            
## Headings h1-h6. With span gamut such as `code`. **bold**, *italics*, critic {-markup-}.

Use between 1 and 6 **#** at the start of a line to generate a heading.

Superscript with ^carrots^. Subscript with ~tilds~. 

## Code

Inline code spans with `backticks`.

```javascript
var some_var = 5
```

@@@echarts
{
    title: {
        text: 'ECharts entry example'
    },
    tooltip: {},
    legend: {
        data:['Sales']
    },
    xAxis: {
        data: ["shirt","cardign","chiffon shirt","pants","heels","socks"]
    },
    yAxis: {},
    series: [{
        name: 'Sales',
        type: 'bar',
        data: [5, 20, 36, 10, 10, 20]
    }]
}
@@@

@@@mermaid
graph TB
subgraph Create Cipher
    password("password") 
    argon2id0hash("Argon2id Hash")
    sha0hash("Sha 256 Hash")
end
subgraph Encryption
    node0cipher("Node AES Cipher")
    configstore("configstore")
    storage("storage")
end
password0prompt -- prompt password --> password
password -- argon2id stretching --> argon2id0hash
argon2id0hash -- sha hash --> sha0hash
sha0hash -- node createcipheriv --> node0cipher
subgraph Prompts
    password0prompt("Password Prompt")
    information0prompt("Information Prompt")
end
subgraph Prepare String
    padder("String Padder")
end
information0prompt -- prompts for information --> padder
padder -- pads the information --> node0cipher
node0cipher -- encrypts the information --> configstore
configstore -- stores the information --> storage
style padder fill:mediumseagreen,stroke:#ccc,stroke-width:1px;
style password0prompt fill:lightcoral,stroke:#ccc,stroke-width:1px;
style information0prompt fill:lightcoral,stroke:#ccc,stroke-width:1px;
style password fill:darkgray,stroke:#ccc,stroke-width:1px;
style argon2id0hash fill:darkgray,stroke:#ccc,stroke-width:1px;
style sha0hash fill:darkgray,stroke:#ccc,stroke-width:1px;
style node0cipher fill:steelblue,stroke:#ccc,stroke-width:1px;
style configstore fill:steelblue,stroke:#ccc,stroke-width:1px;
style storage fill:steelblue,stroke:#ccc,stroke-width:1px;
style Prompts fill:steelblue,stroke:#ccc,stroke-width:1px;
@@@
